{
  "Arn": "arn:aws:iam::aws:policy/AdministratorAccess-Amplify",
  "CreateDate": "2020-12-01T19:03:08Z",
  "DefaultVersionId": "v3",
  "IsAttachable": true,
  "Path": "/",
  "PolicyId": "ANPAZKAPJZG4AML23RALR",
  "PolicyName": "AdministratorAccess-Amplify",
  "PolicyVersion": {
    "CreateDate": "2021-07-26T22:49:07Z",
    "Document": {
      "Statement": [
        {
          "Action": [
            "apigateway:DELETE",
            "apigateway:GET",
            "apigateway:PATCH",
            "apigateway:POST",
            "apigateway:PUT",
            "appsync:CreateApiKey",
            "appsync:CreateDataSource",
            "appsync:CreateFunction",
            "appsync:CreateGraphqlApi",
            "appsync:CreateResolver",
            "appsync:CreateType",
            "appsync:DeleteApiKey",
            "appsync:DeleteDataSource",
            "appsync:DeleteFunction",
            "appsync:DeleteGraphqlApi",
            "appsync:DeleteResolver",
            "appsync:DeleteType",
            "appsync:GetDataSource",
            "appsync:GetFunction",
            "appsync:GetGraphqlApi",
            "appsync:GetIntrospectionSchema",
            "appsync:GetResolver",
            "appsync:GetSchemaCreationStatus",
            "appsync:GetType",
            "appsync:GraphQL",
            "appsync:ListApiKeys",
            "appsync:ListDataSources",
            "appsync:ListFunctions",
            "appsync:ListGraphqlApis",
            "appsync:ListResolvers",
            "appsync:ListResolversByFunction",
            "appsync:ListTagsForResource",
            "appsync:ListTypes",
            "appsync:StartSchemaCreation",
            "appsync:TagResource",
            "appsync:UpdateApiKey",
            "appsync:UpdateDataSource",
            "appsync:UpdateFunction",
            "appsync:UpdateGraphqlApi",
            "appsync:UpdateResolver",
            "appsync:UpdateType",
            "cloudfront:CreateCloudFrontOriginAccessIdentity",
            "cloudfront:CreateDistribution",
            "cloudfront:DeleteCloudFrontOriginAccessIdentity",
            "cloudfront:DeleteDistribution",
            "cloudfront:GetCloudFrontOriginAccessIdentity",
            "cloudfront:GetCloudFrontOriginAccessIdentityConfig",
            "cloudfront:GetDistribution",
            "cloudfront:GetDistributionConfig",
            "cloudfront:TagResource",
            "cloudfront:UntagResource",
            "cloudfront:UpdateCloudFrontOriginAccessIdentity",
            "cloudfront:UpdateDistribution",
            "cognito-identity:CreateIdentityPool",
            "cognito-identity:DeleteIdentityPool",
            "cognito-identity:DescribeIdentity",
            "cognito-identity:DescribeIdentityPool",
            "cognito-identity:GetIdentityPoolRoles",
            "cognito-identity:SetIdentityPoolRoles",
            "cognito-identity:TagResource",
            "cognito-identity:UpdateIdentityPool",
            "cognito-idp:CreateGroup",
            "cognito-idp:CreateUserPool",
            "cognito-idp:CreateUserPoolClient",
            "cognito-idp:DeleteGroup",
            "cognito-idp:DeleteGroup",
            "cognito-idp:DeleteUserPool",
            "cognito-idp:DeleteUserPoolClient",
            "cognito-idp:DescribeUserPool",
            "cognito-idp:DescribeUserPoolClient",
            "cognito-idp:ListTagsForResource",
            "cognito-idp:ListUserPoolClients",
            "cognito-idp:TagResource",
            "cognito-idp:UpdateUserPool",
            "cognito-idp:UpdateUserPoolClient",
            "dynamodb:CreateTable",
            "dynamodb:DeleteItem",
            "dynamodb:DeleteTable",
            "dynamodb:DescribeContinuousBackups",
            "dynamodb:DescribeTable",
            "dynamodb:DescribeTimeToLive",
            "dynamodb:ListStreams",
            "dynamodb:ListTagsOfResource",
            "dynamodb:PutItem",
            "dynamodb:TagResource",
            "dynamodb:UpdateContinuousBackups",
            "dynamodb:UpdateItem",
            "dynamodb:UpdateTable",
            "dynamodb:UpdateTimeToLive",
            "es:AddTags",
            "es:CreateElasticsearchDomain",
            "es:DeleteElasticsearchDomain",
            "es:DescribeElasticsearchDomain",
            "events:DeleteRule",
            "events:DescribeRule",
            "events:ListRuleNamesByTarget",
            "events:PutRule",
            "events:PutTargets",
            "events:RemoveTargets",
            "iam:AttachRolePolicy",
            "iam:CreatePolicy",
            "iam:CreatePolicyVersion",
            "iam:CreateRole",
            "iam:DeletePolicy",
            "iam:DeletePolicyVersion",
            "iam:DeleteRole",
            "iam:DeleteRolePermissionsBoundary",
            "iam:DeleteRolePolicy",
            "iam:DetachRolePolicy",
            "iam:GetPolicy",
            "iam:GetRole",
            "iam:GetRolePolicy",
            "iam:ListPolicyVersions",
            "iam:ListRolePolicies",
            "iam:ListRoleTags",
            "iam:PassRole",
            "iam:PutRolePermissionsBoundary",
            "iam:PutRolePolicy",
            "iam:TagRole",
            "iam:UpdateRole",
            "kinesis:AddTagsToStream",
            "kinesis:CreateStream",
            "kinesis:DeleteStream",
            "kinesis:DescribeStream",
            "kinesis:PutRecords",
            "lambda:AddLayerVersionPermission",
            "lambda:AddPermission",
            "lambda:CreateEventSourceMapping",
            "lambda:CreateFunction",
            "lambda:DeleteEventSourceMapping",
            "lambda:DeleteFunction",
            "lambda:DeleteFunction",
            "lambda:DeleteLayerVersion",
            "lambda:GetEventSourceMapping",
            "lambda:GetFunction",
            "lambda:GetFunctionConfiguration",
            "lambda:GetLayerVersion",
            "lambda:InvokeAsync",
            "lambda:InvokeFunction",
            "lambda:ListEventSourceMappings",
            "lambda:ListLayerVersions",
            "lambda:ListTags",
            "lambda:PublishLayerVersion",
            "lambda:RemoveLayerVersionPermission",
            "lambda:RemovePermission",
            "lambda:TagResource",
            "lambda:UntagResource",
            "lambda:UpdateFunctionCode",
            "lambda:UpdateFunctionConfiguration",
            "mobiletargeting:GetApp",
            "s3:CreateBucket",
            "s3:ListBucket",
            "s3:PutBucketAcl",
            "s3:PutBucketCORS",
            "s3:PutBucketNotification",
            "s3:PutBucketPolicy",
            "s3:PutBucketWebsite",
            "s3:PutEncryptionConfiguration",
            "s3:PutObjectAcl"
          ],
          "Condition": {
            "ForAnyValue:StringEquals": {
              "aws:CalledVia": [
                "cloudformation.amazonaws.com"
              ]
            }
          },
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "CLIManageviaCFNPolicy"
        },
        {
          "Action": [
            "amplify:*",
            "amplifybackend:*",
            "appsync:GetIntrospectionSchema",
            "appsync:GraphQL",
            "appsync:ListApiKeys",
            "appsync:UpdateApiKey",
            "cloudformation:ListStacks",
            "cognito-identity:CreateIdentityPool",
            "cognito-identity:DeleteIdentityPool",
            "cognito-identity:DescribeIdentityPool",
            "cognito-identity:GetIdentityPoolRoles",
            "cognito-identity:ListIdentityPools",
            "cognito-identity:SetIdentityPoolRoles",
            "cognito-idp:AdminAddUserToGroup",
            "cognito-idp:AdminConfirmSignUp",
            "cognito-idp:AdminCreateUser",
            "cognito-idp:AdminDeleteUser",
            "cognito-idp:AdminDeleteUser",
            "cognito-idp:AdminDisableUser",
            "cognito-idp:AdminEnableUser",
            "cognito-idp:AdminGetUser",
            "cognito-idp:AdminListGroupsForUser",
            "cognito-idp:AdminListUserAuthEvents",
            "cognito-idp:AdminRemoveUserFromGroup",
            "cognito-idp:AdminResetUserPassword",
            "cognito-idp:AdminSetUserPassword",
            "cognito-idp:AdminUpdateUserAttributes",
            "cognito-idp:CreateGroup",
            "cognito-idp:CreateUserPool",
            "cognito-idp:CreateUserPoolClient",
            "cognito-idp:DeleteGroup",
            "cognito-idp:DeleteUser",
            "cognito-idp:DeleteUserPool",
            "cognito-idp:DescribeIdentityProvider",
            "cognito-idp:DescribeUserPool",
            "cognito-idp:DescribeUserPoolClient",
            "cognito-idp:ListGroups",
            "cognito-idp:ListUserPoolClients",
            "cognito-idp:ListUserPools",
            "cognito-idp:ListUsers",
            "cognito-idp:ListUsersInGroup",
            "cognito-idp:UpdateUserPool",
            "dynamodb:DescribeTable",
            "iam:AttachRolePolicy",
            "iam:CreatePolicy",
            "iam:CreatePolicyVersion",
            "iam:CreateRole",
            "iam:DeletePolicyVersion",
            "iam:DeleteRole",
            "iam:DeleteRolePolicy",
            "iam:ListAttachedRolePolicies",
            "iam:ListPolicyVersions",
            "iam:ListRolePolicies",
            "iam:PassRole",
            "iam:PutRolePolicy",
            "lambda:AddPermission",
            "lambda:CreateFunction",
            "lambda:DeleteFunction",
            "lambda:GetFunction",
            "mobiletargeting:*",
            "s3:DeleteBucket",
            "s3:DeleteBucketPolicy",
            "s3:DeleteBucketWebsite",
            "s3:DeleteObject",
            "s3:DeleteObjectVersion",
            "s3:GetBucketLocation",
            "s3:GetObject",
            "s3:ListAllMyBuckets",
            "s3:ListBucket",
            "s3:ListBucketVersions",
            "s3:PutObject",
            "sns:CreateSMSSandboxPhoneNumber",
            "sns:DeleteSMSSandboxPhoneNumber",
            "sns:GetSMSSandboxAccountStatus",
            "sns:ListOriginationNumbers",
            "sns:ListSMSSandboxPhoneNumbers",
            "sns:VerifySMSSandboxPhoneNumber",
            "sts:AssumeRole"
          ],
          "Effect": "Allow",
          "Resource": "*",
          "Sid": "CLISDKCalls"
        },
        {
          "Action": [
            "cloudformation:CreateChangeSet",
            "cloudformation:CreateStack",
            "cloudformation:DeleteStack",
            "cloudformation:DescribeChangeSet",
            "cloudformation:DescribeStackEvents",
            "cloudformation:DescribeStackResource",
            "cloudformation:DescribeStackResources",
            "cloudformation:DescribeStacks",
            "cloudformation:ExecuteChangeSet",
            "cloudformation:GetTemplate",
            "cloudformation:ListStackResources",
            "cloudformation:UpdateStack"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:cloudformation:*:*:stack/amplify-*"
          ],
          "Sid": "CLICloudformationPolicy"
        },
        {
          "Action": [
            "ssm:DeleteParameter",
            "ssm:DeleteParameters",
            "ssm:GetParameter",
            "ssm:GetParameters",
            "ssm:GetParametersByPath",
            "ssm:PutParameter"
          ],
          "Effect": "Allow",
          "Resource": "arn:aws:ssm:*:*:parameter/amplify/*",
          "Sid": "AmplifySSMCalls"
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v3"
  },
  "UpdateDate": "2021-07-26T22:49:07Z"
}
