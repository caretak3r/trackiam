{
  "Arn": "arn:aws:iam::aws:policy/SecurityAudit",
  "CreateDate": "2015-02-06T18:41:01Z",
  "DefaultVersionId": "v34",
  "IsAttachable": true,
  "Path": "/",
  "PolicyId": "ANPAIX2T3QCXHR2OGGCTO",
  "PolicyName": "SecurityAudit",
  "PolicyVersion": {
    "CreateDate": "2020-12-15T00:04:54Z",
    "Document": {
      "Statement": [
        {
          "Action": [
            "access-analyzer:GetAnalyzedResource",
            "access-analyzer:GetAnalyzer",
            "access-analyzer:GetArchiveRule",
            "access-analyzer:GetFinding",
            "access-analyzer:ListAnalyzedResources",
            "access-analyzer:ListAnalyzers",
            "access-analyzer:ListArchiveRules",
            "access-analyzer:ListFindings",
            "access-analyzer:ListTagsForResource",
            "acm:Describe*",
            "acm:List*",
            "application-autoscaling:Describe*",
            "appmesh:Describe*",
            "appmesh:List*",
            "appsync:List*",
            "athena:GetWorkGroup",
            "athena:List*",
            "autoscaling:Describe*",
            "batch:DescribeComputeEnvironments",
            "batch:DescribeJobDefinitions",
            "chime:List*",
            "cloud9:Describe*",
            "cloud9:ListEnvironments",
            "clouddirectory:ListDirectories",
            "cloudformation:DescribeStack*",
            "cloudformation:GetStackPolicy",
            "cloudformation:GetTemplate",
            "cloudformation:ListStack*",
            "cloudfront:Get*",
            "cloudfront:List*",
            "cloudhsm:ListHapgs",
            "cloudhsm:ListHsms",
            "cloudhsm:ListLunaClients",
            "cloudsearch:DescribeDomainEndpointOptions",
            "cloudsearch:DescribeDomains",
            "cloudsearch:DescribeServiceAccessPolicies",
            "cloudtrail:DescribeTrails",
            "cloudtrail:GetEventSelectors",
            "cloudtrail:GetTrailStatus",
            "cloudtrail:ListTags",
            "cloudtrail:LookupEvents",
            "cloudwatch:Describe*",
            "cloudwatch:ListTagsForResource",
            "codebuild:ListProjects",
            "codecommit:BatchGetRepositories",
            "codecommit:GetBranch",
            "codecommit:GetObjectIdentifier",
            "codecommit:GetRepository",
            "codecommit:List*",
            "codedeploy:Batch*",
            "codedeploy:Get*",
            "codedeploy:List*",
            "codepipeline:ListPipelines",
            "codestar:Describe*",
            "codestar:List*",
            "cognito-identity:ListIdentityPools",
            "cognito-idp:ListUserPools",
            "cognito-sync:Describe*",
            "cognito-sync:List*",
            "comprehend:Describe*",
            "comprehend:List*",
            "config:BatchGetAggregateResourceConfig",
            "config:BatchGetResourceConfig",
            "config:Deliver*",
            "config:Describe*",
            "config:Get*",
            "config:List*",
            "datapipeline:DescribeObjects",
            "datapipeline:DescribePipelines",
            "datapipeline:EvaluateExpression",
            "datapipeline:GetPipelineDefinition",
            "datapipeline:ListPipelines",
            "datapipeline:QueryObjects",
            "datapipeline:ValidatePipelineDefinition",
            "datasync:Describe*",
            "datasync:List*",
            "dax:Describe*",
            "dax:ListTags",
            "detective:GetGraphIngestState",
            "detective:ListGraphs",
            "detective:ListMembers",
            "directconnect:Describe*",
            "dms:Describe*",
            "dms:ListTagsForResource",
            "ds:DescribeDirectories",
            "dynamodb:DescribeContinuousBackups",
            "dynamodb:DescribeGlobalTable",
            "dynamodb:DescribeTable",
            "dynamodb:DescribeTimeToLive",
            "dynamodb:ListBackups",
            "dynamodb:ListGlobalTables",
            "dynamodb:ListStreams",
            "dynamodb:ListTables",
            "dynamodb:ListTagsOfResource",
            "ec2:Describe*",
            "ec2:DescribeTransitGatewayAttachments",
            "ec2:DescribeTransitGatewayAttachments",
            "ec2:DescribeTransitGatewayMulticastDomains",
            "ec2:DescribeTransitGatewayMulticastDomains",
            "ec2:DescribeTransitGatewayPeeringAttachments",
            "ec2:DescribeTransitGatewayPeeringAttachments",
            "ec2:DescribeTransitGatewayRouteTables",
            "ec2:DescribeTransitGatewayRouteTables",
            "ec2:DescribeTransitGatewayVpcAttachments",
            "ec2:DescribeTransitGatewayVpcAttachments",
            "ec2:DescribeTransitGateways",
            "ec2:DescribeTransitGateways",
            "ec2:GetManagedPrefixListAssociations",
            "ec2:GetManagedPrefixListAssociations",
            "ec2:GetManagedPrefixListEntries",
            "ec2:GetManagedPrefixListEntries",
            "ecr:DescribeImages",
            "ecr:DescribeRepositories",
            "ecr:GetLifecyclePolicy",
            "ecr:GetRepositoryPolicy",
            "ecr:ListTagsForResource",
            "ecs:Describe*",
            "ecs:List*",
            "eks:DescribeCluster",
            "eks:DescribeNodeGroup",
            "eks:ListClusters",
            "eks:ListNodeGroups",
            "elasticache:Describe*",
            "elasticache:ListTagsForResource",
            "elasticbeanstalk:Describe*",
            "elasticbeanstalk:DescribeApplications",
            "elasticbeanstalk:ListTagsForResource",
            "elasticfilesystem:DescribeFileSystems",
            "elasticfilesystem:DescribeMountTargetSecurityGroups",
            "elasticfilesystem:DescribeMountTargets",
            "elasticloadbalancing:Describe*",
            "elasticmapreduce:Describe*",
            "elasticmapreduce:GetBlockPublicAccessConfiguration",
            "elasticmapreduce:ListClusters",
            "elasticmapreduce:ListInstances",
            "es:Describe*",
            "es:ListDomainNames",
            "es:ListElasticsearchInstanceTypeDetails",
            "es:ListElasticsearchVersions",
            "es:ListTags",
            "events:Describe*",
            "events:List*",
            "events:TestEventPattern",
            "firehose:Describe*",
            "firehose:List*",
            "fms:ListComplianceStatus",
            "fms:ListPolicies",
            "fsx:Describe*",
            "fsx:List*",
            "gamelift:ListBuilds",
            "gamelift:ListFleets",
            "glacier:DescribeVault",
            "glacier:GetVaultAccessPolicy",
            "glacier:ListVaults",
            "globalaccelerator:Describe*",
            "globalaccelerator:List*",
            "glue:GetDataCatalogEncryptionSettings",
            "glue:GetDevEndpoints",
            "greengrass:List*",
            "guardduty:DescribePublishingDestination",
            "guardduty:Get*",
            "guardduty:List*",
            "iam:GenerateCredentialReport",
            "iam:GenerateServiceLastAccessedDetails",
            "iam:Get*",
            "iam:List*",
            "iam:SimulateCustomPolicy",
            "iam:SimulatePrincipalPolicy",
            "inspector:Describe*",
            "inspector:Get*",
            "inspector:List*",
            "inspector:Preview*",
            "iot:Describe*",
            "iot:GetPolicy",
            "iot:GetPolicyVersion",
            "iot:List*",
            "kinesis:DescribeStream",
            "kinesis:ListStreams",
            "kinesis:ListTagsForStream",
            "kinesisanalytics:ListApplications",
            "kms:Describe*",
            "kms:Get*",
            "kms:List*",
            "lambda:GetAccountSettings",
            "lambda:GetFunctionConfiguration",
            "lambda:GetLayerVersionPolicy",
            "lambda:GetPolicy",
            "lambda:List*",
            "license-manager:List*",
            "lightsail:GetInstances",
            "lightsail:GetLoadBalancers",
            "logs:Describe*",
            "logs:ListTagsLogGroup",
            "machinelearning:DescribeMLModels",
            "mediaconnect:Describe*",
            "mediaconnect:List*",
            "mediastore:GetContainerPolicy",
            "mediastore:ListContainers",
            "opsworks-cm:DescribeServers",
            "opsworks:DescribeStacks",
            "organizations:Describe*",
            "organizations:List*",
            "quicksight:Describe*",
            "quicksight:List*",
            "ram:List*",
            "rds:Describe*",
            "rds:DownloadDBLogFilePortion",
            "rds:ListTagsForResource",
            "redshift:Describe*",
            "rekognition:Describe*",
            "rekognition:List*",
            "robomaker:Describe*",
            "robomaker:List*",
            "route53:Get*",
            "route53:List*",
            "route53domains:GetDomainDetail",
            "route53domains:GetOperationDetail",
            "route53domains:ListDomains",
            "route53domains:ListOperations",
            "route53domains:ListTagsForDomain",
            "route53resolver:Get*",
            "route53resolver:List*",
            "s3:GetAccelerateConfiguration",
            "s3:GetAccessPoint",
            "s3:GetAccessPointPolicy",
            "s3:GetAccessPointPolicyStatus",
            "s3:GetAccountPublicAccessBlock",
            "s3:GetAnalyticsConfiguration",
            "s3:GetBucket*",
            "s3:GetEncryptionConfiguration",
            "s3:GetInventoryConfiguration",
            "s3:GetLifecycleConfiguration",
            "s3:GetMetricsConfiguration",
            "s3:GetObjectAcl",
            "s3:GetObjectVersionAcl",
            "s3:GetReplicationConfiguration",
            "s3:ListAccessPoints",
            "s3:ListAllMyBuckets",
            "sagemaker:Describe*",
            "sagemaker:List*",
            "sdb:DomainMetadata",
            "sdb:ListDomains",
            "secretsmanager:DescribeSecret",
            "secretsmanager:GetResourcePolicy",
            "secretsmanager:ListSecretVersionIds",
            "secretsmanager:ListSecrets",
            "securityhub:Describe*",
            "securityhub:Get*",
            "securityhub:List*",
            "serverlessrepo:GetApplicationPolicy",
            "serverlessrepo:List*",
            "ses:GetIdentityDkimAttributes",
            "ses:GetIdentityPolicies",
            "ses:GetIdentityVerificationAttributes",
            "ses:ListIdentities",
            "ses:ListIdentityPolicies",
            "ses:ListVerifiedEmailAddresses",
            "shield:Describe*",
            "shield:List*",
            "snowball:ListClusters",
            "snowball:ListJobs",
            "sns:GetTopicAttributes",
            "sns:ListSubscriptionsByTopic",
            "sns:ListTagsForResource",
            "sns:ListTagsForResource",
            "sns:ListTopics",
            "sqs:GetQueueAttributes",
            "sqs:ListDeadLetterSourceQueues",
            "sqs:ListQueueTags",
            "sqs:ListQueues",
            "ssm:Describe*",
            "ssm:GetAutomationExecution",
            "ssm:ListDocuments",
            "ssm:ListTagsForResource",
            "sso:DescribePermissionsPolicies",
            "sso:List*",
            "states:ListStateMachines",
            "storagegateway:DescribeBandwidthRateLimit",
            "storagegateway:DescribeCache",
            "storagegateway:DescribeCachediSCSIVolumes",
            "storagegateway:DescribeGatewayInformation",
            "storagegateway:DescribeMaintenanceStartTime",
            "storagegateway:DescribeNFSFileShares",
            "storagegateway:DescribeSnapshotSchedule",
            "storagegateway:DescribeStorediSCSIVolumes",
            "storagegateway:DescribeTapeArchives",
            "storagegateway:DescribeTapeRecoveryPoints",
            "storagegateway:DescribeTapes",
            "storagegateway:DescribeUploadBuffer",
            "storagegateway:DescribeVTLDevices",
            "storagegateway:DescribeWorkingStorage",
            "storagegateway:List*",
            "tag:GetResources",
            "tag:GetTagKeys",
            "transfer:Describe*",
            "transfer:List*",
            "translate:List*",
            "trustedadvisor:Describe*",
            "waf-regional:GetWebACL",
            "waf-regional:ListResourcesForWebACL",
            "waf-regional:ListTagsForResource",
            "waf-regional:ListWebACLs",
            "waf:GetWebACL",
            "waf:ListTagsForResource",
            "waf:ListWebACLs",
            "wafv2:GetWebACL",
            "wafv2:ListAvailableManagedRuleGroups",
            "wafv2:ListIPSets",
            "wafv2:ListLoggingConfigurations",
            "wafv2:ListRegexPatternSets",
            "wafv2:ListResourcesForWebACL",
            "wafv2:ListRuleGroups",
            "wafv2:ListTagsForResource",
            "wafv2:ListWebACLs",
            "workspaces:Describe*"
          ],
          "Effect": "Allow",
          "Resource": "*"
        },
        {
          "Action": [
            "apigateway:GET"
          ],
          "Effect": "Allow",
          "Resource": [
            "arn:aws:apigateway:*::/apis",
            "arn:aws:apigateway:*::/apis/*/routes",
            "arn:aws:apigateway:*::/apis/*/stages",
            "arn:aws:apigateway:*::/apis/*/stages/*",
            "arn:aws:apigateway:*::/clientcertificates/*",
            "arn:aws:apigateway:*::/restapis",
            "arn:aws:apigateway:*::/restapis/*/authorizers",
            "arn:aws:apigateway:*::/restapis/*/authorizers/*",
            "arn:aws:apigateway:*::/restapis/*/documentation/versions",
            "arn:aws:apigateway:*::/restapis/*/resources",
            "arn:aws:apigateway:*::/restapis/*/resources/*",
            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
            "arn:aws:apigateway:*::/restapis/*/stages",
            "arn:aws:apigateway:*::/restapis/*/stages/*",
            "arn:aws:apigateway:*::/tags/*",
            "arn:aws:apigateway:*::/vpclinks"
          ]
        }
      ],
      "Version": "2012-10-17"
    },
    "IsDefaultVersion": true,
    "VersionId": "v34"
  },
  "UpdateDate": "2020-12-15T00:04:54Z"
}
